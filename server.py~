#  coding: utf-8 
import SocketServer
import os

# Copyright 2013 Abram Hindle, Eddie Antonio Santos, Di Zhang
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Furthermore it is derived from the Python documentation examples thus
# some of the code is Copyright Â© 2001-2013 Python Software
# Foundation; All Rights Reserved
#
# http://docs.python.org/2/library/socketserver.html
#
# run: python freetests.py

# try: curl -v -X GET http://127.0.0.1:8080/

#following from https://hg.python.org/cpython/file/2.7/Lib/BaseHTTPServer.py
responses = {
        200: ('OK', 'Request fulfilled, document follows'),
        301: ('Moved Permanently', 'Object moved permanently -- see URI list'),
        302: ('Found', 'Object moved temporarily -- see URI list'),
        404: ('Not Found', 'Nothing matches the given URI')
        }


class Error(Exception):
    def __init__(self,status_code):
        self.status_code=404
        self.status_msg=responses[status_code]
        self.status_reason=responses[status_code][1]

class MyWebServer(SocketServer.BaseRequestHandler):
    
    def handle(self):
        self.data = self.request.recv(1024).strip()

        try:
            #parse head
            path=self.parse_head(self.data)
            method=self.get(path)
            
        except Error as e:
            self.response(404, "html","")
     
	
    def parse_head(self,request):
           line=request.splitlines()[0]
        #head has 3 parts: request method, root directory
        #and protocal version
           reqMethod,path,ver=line.split(" ")
           return path   

    def get(self,path):
        root=os.path.abspath('www')
        file=root+path
        absolute=os.path.abspath(file)
        mime_type=absolute.split('.')[-1]

        print "path "+path
        print "absolute "+absolute
        #check for / and piggyback index.html 
        if os.path.isdir(absolute):
            if path[-1]!='/':
                path=path+'/'
            absolute=os.path.join(absolute,'index.html')

            #https://docs.python.org/2/library/mimetypes.html
            mime_type=absolute.split('.')[-1]

        if(os.path.isfile(absolute) and (mime_type == "html" or mime_type == "css")):
            f=open(absolute,'r')
            data=f.read()
            self.response(200,mime_type,data)
        else:
            self.response(404, "html","404 Not Found")
        

    #format from https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html
    def response(self,status,mime,content=''):
        response = "HTTP/1.1 %d %s\n" % (status, responses[status][0])
        response += "Content-Length: %d \n" %len(content)
        response += "Content-Type: text/%s\n" %mime
        response += "Connection: close\r\n\r\n"
        response += content + "\r\n"

        self.request.sendall(response)
	

	

if __name__ == "__main__":
    HOST, PORT = "localhost", 8080

    SocketServer.TCPServer.allow_reuse_address = True
    # Create the server, binding to localhost on port 8080
    server = SocketServer.TCPServer((HOST, PORT), MyWebServer)

    # Activate the server; this will keep running until you
    # interrupt the program with Ctrl-C
    server.serve_forever()
